#!/usr/bin/env python
import argparse
import os
import sys

from needler import NeedlerConfig, NeedlerSuite, NeedlerResults

# Parse command line arguments
parser = argparse.ArgumentParser(prog='needler', version='0.1.0')
parser.add_argument('-c', '--config', default='needler.yaml')
parser.add_argument('-b', '--baseline', action='store_true', default=False)
parser.add_argument('-d', '--baseline-directory', dest='baseline_directory')
parser.add_argument('-o', '--output-directory', dest='output_directory')
parser.add_argument('-j', '--json', dest='as_json', action='store_true', default=False)
args = parser.parse_args()

# Parse config file
config = NeedlerConfig.from_file(args.config)

# Override config values from command like arguments
config.baseline = args.baseline
config.as_json = args.as_json
if args.baseline_directory:
    config.baseline_directory = args.baseline_directory
if args.output_directory:
    config.output_directory = args.output_directory

# Make sure out baseline/output directories exist
if not os.path.isdir(config.baseline_directory):
    os.makedirs(config.baseline_directory)
if not os.path.isdir(config.output_directory):
    os.makedirs(config.output_directory)

# Create our test suite and run
results = NeedlerResults(config)
suite = NeedlerSuite.from_config(config)
results = suite.run(results)
results.print_results()

# `0` on success, `1` on error
exit_code = 0 if results.wasSuccessful() else 1
sys.exit(exit_code)
